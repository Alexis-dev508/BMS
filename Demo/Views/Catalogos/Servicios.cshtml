@model List<Demo.Models.Servicios>
<div class="container-fluid">
	<div class="row">
		<div class="col-sm-12">
			<div class="card-primary">
				<div class="card-header">
				   <h3>Servicios para Equipos </h3>
			   </div>
                <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
                    <form class="form-inline my-2 my-lg-0">
					  <a class="btn btn-outline-primary" href="@Url.Action("NuevoServicio","Catalogos")" >
						   <i class="fas fa-file"></i>
						   Nuevo Servicio
					  </a>
					  &nbsp;&nbsp;&nbsp;&nbsp;
					  <input class="form-control mr-sm-2" id="busqueda" type="search" onkeyup="buscar()" placeholder="Buscar" aria-label="Search"/>
					  &nbsp;&nbsp;&nbsp;&nbsp;
					  @if (TempData["mensajeINF"] != null)
						{
							<div class="alert alert-info alert-dismissible fade show" role="alert">
								@TempData["mensajeINF"]
								<button type="button" class="close" data-dismiss="alert" aria-label="Close">
									<span aria-hidden="true">&times;</span>
								</button>
							</div>
						}
						@if (TempData["mensajeSAVE"] != null)
						{
							<div class="alert alert-success alert-dismissible fade show" role="alert">
								@TempData["mensajeSAVE"]
								<button type="button" class="close" data-dismiss="alert" aria-label="Close">
									<span aria-hidden="true">&times;</span>
								</button>
							</div>
						}
						@if (TempData["mensajeEDIT"] != null)
						{
							<div class="alert alert-warning alert-dismissible fade show" role="alert">
								@TempData["mensajeEDIT"]
								<button type="button" class="close" data-dismiss="alert" aria-label="Close">
									<span aria-hidden="true">&times;</span>
								</button>
							</div>
						}
					</form>

                </nav>
                <div class="table-responsive">
                    <table class="table table-bordered" id="tabla">
                        <thead>
                            <tr>
                                <th>Servicio</th>
                                <th>Nombre</th>
                                <th>Conc. Servicio</th>
                                <th>Hrs. Mecánico</th>
                                <th>Min. Mecánico</th>
                                <th>Precio</th>
                                <th>Orden Mostrar</th>
                                <th>Días</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var dat in Model)
                            {
                                <tr>
                                    <td>@dat.servicio</td>
                                    <td>@dat.nombre</td>
                                    <td>@dat.cs_nombre</td>
                                    <td>@dat.horas_mecanico</td>
                                    <td>@dat.minutos_mecanico</td>
                                    <td align="right">@dat.precio.ToString("#,##0.00")</td>
                                    <td>@dat.orden_mostrar</td>
                                    <td>@dat.dias</td>
                                    <td>@dat.status</td>
                                    <td>
                                        <a class="btn btn-outline-warning" href="@Url.Action("EditarServicio","Catalogos", new {id = dat.servicio})">
                                            <i class="fas fa-edit"></i>
                                            Editar
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
			</div>
			</div>
		</div>
	</div>
</div>
<script>
//busca en la tabla
function buscar()
        {
            const tableReg = document.getElementById('tabla');
            const searchText = document.getElementById('busqueda').value.toLowerCase();
            let total = 0;
            for (let i = 1; i < tableReg.rows.length; i++) {
                if (tableReg.rows[i].classList.contains("noSearch")) {
                    continue;
                }
                let found = false;
                const cellsOfRow = tableReg.rows[i].getElementsByTagName('td');
                for (let j = 0; j < cellsOfRow.length && !found; j++) {
                    const compareWith = cellsOfRow[j].innerHTML.toLowerCase();
                    if (searchText.length == 0 || compareWith.indexOf(searchText) > -1) {
                        found = true;
                        total++;
                    }
                }
                if (found) {
                    tableReg.rows[i].style.display = '';
                } else {
                    tableReg.rows[i].style.display = 'none';
                }
            }
            const lastTR=tableReg.rows[tableReg.rows.length-1];
            const td=lastTR.querySelector("td");
            lastTR.classList.remove("hide", "red");
            if (searchText == "") {
                lastTR.classList.add("hide");
            }
        }
$(document).ready( function () {
    $('#tabla').DataTable();
} );
</script>


